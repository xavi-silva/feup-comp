import ioPlus;

ConditionArgsFuncCall {




.construct ConditionArgsFuncCall().V {
    invokespecial(this, "<init>").V;
}

.method public func(a.bool, b.bool, c.bool, d.bool).i32 {

invokestatic(ioPlus, "printResult", 10.i32).V;
   ret.i32 1.i32;
}

.method public static main(args.array.String).V {
   tmp0.ConditionArgsFuncCall :=.ConditionArgsFuncCall new(ConditionArgsFuncCall).ConditionArgsFuncCall;
invokespecial(tmp0.ConditionArgsFuncCall, "<init>").V;
d.ConditionArgsFuncCall :=.ConditionArgsFuncCall tmp0.ConditionArgsFuncCall;

   a.i32 :=.i32 10.i32;

   b.i32 :=.i32 5.i32;

   i.bool :=.bool 1.bool;

   j.bool :=.bool 0.bool;

   tmp1.bool :=.bool a.i32 <.bool b.i32;

if (i.bool) goto then0;
andTmp0.bool :=.bool 0.bool;
goto endif0;
then0:

andTmp0.bool :=.bool j.bool;
endif0:
tmp2.bool :=.bool a.i32 <.bool b.i32;

if (tmp2.bool) goto then1;
andTmp1.bool :=.bool 0.bool;
goto endif1;
then1:

andTmp1.bool :=.bool i.bool;
endif1:
tmp3.bool :=.bool !.bool i.bool;
tmp4.i32 :=.i32 invokevirtual(d.ConditionArgsFuncCall, "func", tmp1.bool, andTmp0.bool, andTmp1.bool, tmp3.bool).i32;
a.i32 :=.i32 tmp4.i32;

   ret.V ;
}

}