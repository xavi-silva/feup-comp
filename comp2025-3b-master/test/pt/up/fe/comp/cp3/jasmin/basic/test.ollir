import ioPlus;

IfWhileNested {




.construct IfWhileNested().V {
    invokespecial(this, "<init>").V;
}

.method public func().i32 {
   flag1.bool :=.bool 1.bool;

   flag2.bool :=.bool 0.bool;

   if (flag1.bool) goto then2;
if (flag2.bool) goto then1;
a.i32 :=.i32 4.i32;

goto endif1;
then1:
a.i32 :=.i32 3.i32;

endif1:

goto endif2;
then2:
if (flag2.bool) goto then0;
a.i32 :=.i32 1.i32;

goto endif0;
then0:
a.i32 :=.i32 0.i32;

endif0:

endif2:

   ret.i32 0.i32;
}

}